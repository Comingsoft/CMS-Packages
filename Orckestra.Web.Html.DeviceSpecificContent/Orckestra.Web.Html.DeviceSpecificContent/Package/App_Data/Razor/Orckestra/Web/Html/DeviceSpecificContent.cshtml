@using System.Web.Configuration
@using Composite.C1Console.Security
@using Composite.Core.WebClient.Renderings.Page

@inherits RazorFunction

@functions {
	public override string FunctionDescription
	{
		get { return "Deliver either 'Mobile' or 'Desktop' content , depending on the browser requesting the page."; }
	}

	[FunctionParameter(Label = "Mobile Content", Help = "What you put here will be shown in mobile view")]
	public Lazy<XhtmlDocument> Mobile { get; set; }

	[FunctionParameter(Label = "Desktop Content", Help = "What you put here will be shown in desktop view")]
	public Lazy<XhtmlDocument> Desktop { get; set; }

	private static bool cahceKeyInitialized = false;
	private static object cahceKeyInitializedLock = new object();

	private static bool IsMobileClient(HttpContext context)
	{
		var debugMobile = UserValidationFacade.IsLoggedIn() && (context.Request["cmsdisplaymode"] == "mobile");
		var myBrowserCaps = context.Request.Browser;

		return debugMobile || ((HttpCapabilitiesBase)myBrowserCaps).IsMobileDevice;
	}

	private const string DeviceTypeLabelStyle = "position:absolute; background:#ccc; color: #666; width:7em; right:0; padding: 10px 15px; font-size: 16px; letter-spacing: 2px;";
}
@{
	if (!cahceKeyInitialized)
	{
		lock (cahceKeyInitializedLock)
		{
			cahceKeyInitialized = true;
			// ensure all full page caching will respect mobile/desktop difference
			Composite.Core.WebClient.ApplicationLevelEventHandlers.RegisterC1PageVaryByCustomStringProvider("IsMobileClient",
				f => IsMobileClient(f) ? "mobile" : "desktop");
		}
	}

	var isMobileClient = IsMobileClient(HttpContext.Current);
	var isScreenshotGeneration = PageRenderer.RenderingReason == RenderingReason.ScreenshotGeneration;
}
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0">
<head>
</head>
<body>
	@if (isScreenshotGeneration)
	{
		<div style="max-height: 450px; overflow: hidden; margin-bottom: 20px;">
			<div style="@DeviceTypeLabelStyle">MOBILE</div>
			@Markup(Mobile.Value)
		</div>
		<div>
			<div style="@(DeviceTypeLabelStyle)">DESKTOP</div>
			@Markup(Desktop.Value)
		</div>
	}
	else
	{
		if (isMobileClient)
		{
			@Markup(Mobile.Value)
		}

		if (!isMobileClient)
		{
			@Markup(Desktop.Value)
		}
	}

</body>
</html>